{"version":3,"file":"20230308-formapp-c6e5b085670f2fa9d2b1.js","mappings":"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","sources":["webpack://care-ops-frontend/./src/js/formapp/utils.js","webpack://care-ops-frontend/./src/js/formapp/components.js","webpack://care-ops-frontend/./src/js/formapp.js"],"sourcesContent":["/* global Formio, FormioUtils */\nimport { extend, reduce } from 'underscore';\n\n// Note: Allows for setting the submission at form instantiation\n// https://github.com/formio/formio.js/pull/4580\nconst webformInit = Formio.Displays.displays.webform.prototype.init;\n\nFormio.Displays.displays.webform.prototype.init = function() {\n  if (this.options.data) {\n    const data = extend({}, this.options.data);\n    this._submission = { data };\n    this._data = data;\n  }\n  webformInit.call(this);\n};\n\n// NOTE: Evaluator should throw errors\n// https://github.com/formio/formio.js/issues/4613\nconst evaluator = Formio.Evaluator.evaluator;\nFormio.Evaluator.evaluator = function(func, ...params) {\n  try {\n    return evaluator(func, ...params);\n  } catch (e) {\n    /* eslint-disable-next-line no-console */\n    console.error(e);\n  }\n};\n\n// NOTE: Evaluate should also throw errors\nconst evaluate = Formio.Evaluator.evaluate;\nFormio.Evaluator.evaluate = function(func, ...params) {\n  try {\n    return evaluate(func, ...params);\n  } catch (e) {\n    /* eslint-disable-next-line no-console */\n    console.error(e);\n  }\n};\n\nfunction getScriptContext(contextScripts, baseContext) {\n  return Formio.createForm(document.createElement('div'), {}).then(form => {\n    const context = reduce(contextScripts, (memo, script) => {\n      return extend({}, memo, FormioUtils.evaluate(script, form.evalContext(memo)));\n    }, baseContext);\n\n    form.destroy();\n\n    return context;\n  });\n}\n\nfunction getSubmission(formData, formSubmission, reducers, evalContext) {\n  return Formio.createForm(document.createElement('div'), {}, { evalContext }).then(form => {\n    const submission = reduce(reducers, (memo, reducer) => {\n      return FormioUtils.evaluate(reducer, form.evalContext({ formSubmission: memo, formData })) || memo;\n    }, formSubmission);\n\n    form.destroy();\n\n    return submission;\n  });\n}\n\nconst hasChangedFunction = 'return function hasChanged(key) { return !_.isEqual(_.get(formSubmission, key), _.get(prevSubmission, key)); }';\n\nfunction getChangeReducers(form, changeReducers, curSubmission, prevSubmission) {\n  return reduce(changeReducers, (memo, reducer) => {\n    const context = form.evalContext({ formSubmission: memo, prevSubmission });\n    context.hasChanged = FormioUtils.evaluate(hasChangedFunction, context);\n    return FormioUtils.evaluate(reducer, context) || memo;\n  }, curSubmission);\n}\n\nexport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n};\n","/* global Formio */\nimport { debounce } from 'underscore';\nconst NestedComponent = Formio.Components.components.nested;\nconst SelectComponent = Formio.Components.components.select;\n\n// Modifies the emptyValue to avoid error on php mutating {} to []\nclass SurveyComponent extends Formio.Components.components.survey {\n  get emptyValue() {\n    return [];\n  }\n}\n\nFormio.Components.components.survey = SurveyComponent;\n\nclass SnippetComponent extends NestedComponent {\n  constructor(...args) {\n    super(...args);\n    this.noField = true;\n  }\n  static schema(...extendArgs) {\n    return NestedComponent.schema({\n      label: 'Snippet',\n      key: 'snippet',\n      type: 'snippet',\n      components: [],\n      input: false,\n      persistent: false,\n      snippet: null,\n    }, ...extendArgs);\n  }\n}\n\n// NOTE: Outside of the schema much of the logic is slightly modified from SelectComponent\nclass DirectoryComponent extends SelectComponent {\n  static schema(...extend) {\n    return SelectComponent.schema({\n      label: 'Directory',\n      key: 'directory',\n      type: 'directory',\n      dataSrc: 'custom',\n      searchField: true,\n      customOptions: {\n        noChoicesText: 'Type a minimum of 3 characters for results',\n      },\n    }, ...extend);\n  }\n\n  get defaultSchema() {\n    return DirectoryComponent.schema();\n  }\n\n  constructor(...args) {\n    super(...args);\n    this.updateCustomItems = debounce(this.updateCustomItems, 300);\n  }\n\n  updateItems(searchInput, forceUpdate) {\n    if (!this.visible) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.updateCustomItems(forceUpdate, searchInput);\n  }\n\n  // NOTE: Biggest modification is exposing the searchInput to the custom code\n  getCustomItems(searchInput) {\n    if (!searchInput || searchInput.length < 3) return Promise.resolve([]);\n\n    return this.evaluate(this.component.data.custom, {\n      values: [],\n      searchInput,\n    }, 'values');\n  }\n\n  updateCustomItems(forceUpdate, searchInput) {\n    if (!forceUpdate && !this.active) {\n      this.itemsLoadedResolve();\n      return;\n    }\n\n    this.loading = true;\n    this.getCustomItems(searchInput)\n      .then(items => {\n        this.loading = false;\n        this.setItems(items || []);\n      })\n      .catch(err => {\n        this.handleLoadingError(err);\n      });\n  }\n}\n\nFormio.use({\n  components: {\n    snippet: SnippetComponent,\n    directory: DirectoryComponent,\n  },\n});\n","/* global Formio, FormioUtils */\nimport 'formiojs/dist/formio.form.min';\nimport 'formiojs/dist/formio.form.css';\nimport '@fortawesome/fontawesome-pro/scss/fontawesome.scss';\nimport '@fortawesome/fontawesome-pro/scss/v4-shims.scss';\nimport '@fortawesome/fontawesome-pro/scss/solid.scss';\nimport 'scss/formapp/bootstrap.min.css';\n\nimport 'scss/formapp-core.scss';\n\nimport { extend, map, debounce } from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport Handlebars from 'handlebars/runtime';\nimport parsePhoneNumber from 'libphonenumber-js/min';\n\nimport intl from 'js/i18n';\n\nimport { versions } from './config';\n\nimport {\n  getScriptContext,\n  getSubmission,\n  getChangeReducers,\n} from 'js/formapp/utils';\n\nimport 'js/formapp/components';\n\nimport 'scss/formapp/comment.scss';\nimport 'scss/formapp/form.scss';\nimport 'scss/formapp/formio-overrides.scss';\nimport 'scss/formapp/print.scss';\nimport 'scss/formapp/pdf.scss';\n\nimport 'scss/modules/loader.scss';\n\nlet router;\n\nfunction scrollTop() {\n  window.scrollTo({ top: 0 });\n}\n\nfunction getDirectory(directoryName, query) {\n  return router.request('fetch:directory', { directoryName, query });\n}\n\nfunction getContext(contextScripts) {\n  return getScriptContext(contextScripts, { getDirectory, Handlebars, TEMPLATES: {}, parsePhoneNumber });\n}\n\nlet prevSubmission;\n\nconst onChange = function(form, changeReducers) {\n  const data = getChangeReducers(form, changeReducers, structuredClone(form.submission.data), prevSubmission);\n\n  form.data = data;\n  form.setSubmission({ data }, { fromChangeReducers: true, fromSubmission: false });\n\n  prevSubmission = structuredClone(form.submission.data);\n};\n\nconst onChangeDebounce = debounce(onChange, 100);\n\nconst updateSubmision = debounce(function(submission) {\n  router.request('update:storedSubmission', submission);\n}, 2000);\n\nasync function renderForm({ definition, storedSubmission, formData, formSubmission, reducers, changeReducers, contextScripts, beforeSubmit }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = storedSubmission || await getSubmission(formData, formSubmission, reducers, evalContext);\n  prevSubmission = structuredClone(submission);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    evalContext,\n    data: submission,\n    onChange({ fromChangeReducers }, { instance }) {\n      if (fromChangeReducers && form.initialized) return;\n\n      // Prevents clearing submission on add/edit of editgrid\n      if (instance && instance.inEditGrid) return;\n\n      updateSubmision(form.submission.data);\n\n      onChangeDebounce(form, changeReducers);\n    },\n  });\n\n  form.nosubmit = true;\n\n  router.off('form:submit');\n  router.off('form:errors');\n\n  router.on({\n    'form:errors'(errors) {\n      // NOTE: maps errors due to https://github.com/formio/formio.js/issues/3970\n      form.showErrors(map(errors, error => {\n        return { message: error };\n      }), true);\n    },\n    'form:submit'() {\n      form.submit();\n    },\n  });\n\n  form.on('prevPage', scrollTop);\n  form.on('nextPage', scrollTop);\n\n  form.on('error', () => {\n    router.request('ready:form');\n  });\n\n  form.on('submit', response => {\n    // Always run one last change event on submit\n    onChangeDebounce.cancel();\n    onChange(form, changeReducers);\n    form.setPristine(false);\n    if (!form.checkValidity(response.data, true, response.data)) {\n      form.emit('error');\n      return;\n    }\n\n    const data = FormioUtils.evaluate(beforeSubmit, form.evalContext({ formSubmission: response.data })) || {};\n\n    router.request('submit:form', { response: extend({}, response, { data }) });\n  });\n\n  router.request('ready:form');\n}\n\nasync function renderPreview({ definition, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isPreview: true });\n\n  Formio.createForm(document.getElementById('root'), definition, { evalContext });\n}\n\nasync function renderResponse({ definition, formSubmission, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  extend(evalContext, { isResponse: true });\n\n  Formio.createForm(document.getElementById('root'), definition, {\n    readOnly: true,\n    renderMode: 'form',\n    evalContext,\n    data: formSubmission,\n  }).then(form => {\n    form.on('prevPage', scrollTop);\n    form.on('nextPage', scrollTop);\n  });\n}\n\nasync function renderPdf({ definition, formData, formSubmission, reducers, contextScripts }) {\n  const evalContext = await getContext(contextScripts);\n\n  const submission = await getSubmission(formData, formSubmission, reducers, evalContext);\n\n  const form = await Formio.createForm(document.getElementById('root'), definition, {\n    evalContext,\n    data: submission,\n  });\n\n  form.nosubmit = true;\n}\n\nconst Router = Backbone.Router.extend({\n  initialize() {\n    window.addEventListener('message', ({ data, origin }) => {\n      /* istanbul ignore next: security check */\n      if (origin !== window.origin || !data || !data.message) return;\n\n      this.trigger(data.message, data.args);\n    }, false);\n\n    $(window).on('focus', () => {\n      this.request('focus');\n    });\n\n    this.request('version', versions.frontend);\n  },\n  request(message, args = {}) {\n    const request = new Promise(resolve => {\n      this.once(message, resolve);\n      parent.postMessage({ message, args }, window.origin);\n    });\n\n    return request;\n  },\n  routes: {\n    'formapp/': 'renderForm',\n    'formapp/preview': 'renderPreview',\n    'formapp/:id': 'renderResponse',\n    'formapp/pdf/:formId/:patientId(/:responseId)': 'renderPdf',\n  },\n  renderForm() {\n    this.request('fetch:form:data').then(renderForm);\n  },\n  renderPreview() {\n    this.request('fetch:form').then(renderPreview);\n  },\n  renderResponse(responseId) {\n    this.request('fetch:form:response', { responseId }).then(renderResponse);\n  },\n  renderPdf(formId, patientId, responseId) {\n    this.once('form:pdf', renderPdf);\n    $('body').append(`<iframe class=\"iframe-hidden\" src=\"/formservice/${ formId }/${ patientId }${ responseId ? `/${ responseId }` : '' }\"></iframe>`);\n  },\n});\n\nfunction startFormApp() {\n  $('#root').append(`\n    <div class=\"loader__bar js-progress-bar\">\n      <div class=\"loader__bar-progress--loop\"></div>\n    </div>\n    <div class=\"loader__text js-loading\">${ intl.regions.preload.loading }</div>\n  `);\n  router = new Router();\n  Backbone.history.start({ pushState: true });\n}\n\nexport {\n  startFormApp,\n};\n"],"names":["webformInit","Formio","Displays","displays","webform","prototype","init","this","options","data","extend","_submission","_data","call","evaluator","Evaluator","func","params","e","console","error","evaluate","getSubmission","formData","formSubmission","reducers","evalContext","createForm","document","createElement","then","form","submission","reduce","memo","reducer","FormioUtils","destroy","NestedComponent","Components","components","nested","SelectComponent","select","SurveyComponent","survey","emptyValue","DirectoryComponent","static","schema","label","key","type","dataSrc","searchField","customOptions","noChoicesText","defaultSchema","constructor","super","updateCustomItems","debounce","updateItems","searchInput","forceUpdate","visible","itemsLoadedResolve","getCustomItems","length","Promise","resolve","component","custom","values","active","loading","items","setItems","catch","err","handleLoadingError","router","prevSubmission","scrollTop","window","scrollTo","top","getDirectory","directoryName","query","request","getContext","contextScripts","baseContext","context","script","getScriptContext","Handlebars","TEMPLATES","parsePhoneNumber","use","snippet","noField","extendArgs","input","persistent","directory","onChange","changeReducers","curSubmission","hasChanged","getChangeReducers","structuredClone","setSubmission","fromChangeReducers","fromSubmission","onChangeDebounce","updateSubmision","async","renderForm","definition","storedSubmission","beforeSubmit","getElementById","instance","initialized","inEditGrid","nosubmit","off","on","errors","showErrors","map","message","submit","response","cancel","setPristine","checkValidity","emit","renderPreview","isPreview","renderResponse","isResponse","readOnly","renderMode","renderPdf","Router","Backbone","initialize","addEventListener","origin","trigger","args","$","versions","once","parent","postMessage","routes","responseId","formId","patientId","append","startFormApp","intl","pushState"],"sourceRoot":""}