{"version":3,"file":"20230207-outreach-206fe4cbc9b05934d44a.js","mappings":"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","sources":["webpack://care-ops-frontend/./src/js/base/routerapp.js","webpack://care-ops-frontend/./src/js/behaviors/iframe-form.js","webpack://care-ops-frontend/./src/js/outreach/outreach_views.js","webpack://care-ops-frontend/./src/js/outreach/index.js","webpack://care-ops-frontend/./node_modules/backbone.eventrouter/dist/backbone.eventrouter.js"],"sourcesContent":["import { extend, isEqual, isFunction, partial, reduce, rest, result } from 'underscore';\nimport Backbone from 'backbone';\nimport Radio from 'backbone.radio';\nimport EventRouter from 'backbone.eventrouter';\nimport App from './app';\n\nexport default App.extend({\n  // Set in router apps for nav selection\n  routerAppName: '',\n\n  constructor: function() {\n    this.initRouter();\n\n    // if the app does not handle a given route, stop\n    this.listenTo(this.router, 'noMatch', this.onNoMatch);\n\n    this.on('before:stop', this.stopCurrent);\n\n    App.apply(this, arguments);\n  },\n\n  initRouter() {\n    this._routes = result(this, 'eventRoutes');\n\n    const routeTriggers = this.getRouteTriggers();\n\n    this.router = new EventRouter({ routeTriggers });\n\n    this.bindRouteEvents();\n  },\n\n  onNoMatch() {\n    this.stop();\n    this._currentRoute = null;\n  },\n\n  // For each route in the hash creates a routeTriggers hash\n  getRouteTriggers() {\n    return reduce(this._routes, function(routeTriggers, { route }, eventName) {\n      routeTriggers[eventName] = route;\n\n      return routeTriggers;\n    }, {});\n  },\n\n  getEventActions(eventRoutes, routeAction) {\n    return reduce(eventRoutes, function(eventActions, { action }, eventName) {\n      eventActions[eventName] = partial(routeAction, eventName, action);\n\n      return eventActions;\n    }, {});\n  },\n\n  // handle route events\n  // accepts a hash of 'some:event' : 'actionFunction'\n  // listens to the router channel and calls the appropriate\n  // action via the routeAction handler\n  bindRouteEvents() {\n    const eventActions = this.getEventActions(this._routes, this.routeAction);\n\n    this.listenTo(this.router.getChannel(), eventActions);\n  },\n\n  // applys the route's action\n  // starts this routerapp if necessary\n  // triggers before and after events\n  routeAction(event, action, ...args) {\n    if (!this.isRunning()) {\n      this.start();\n    }\n\n    this.triggerMethod('before:appRoute', event, ...args);\n\n    Radio.request('sidebar', 'close');\n\n    Radio.request('nav', 'select', this.routerAppName, event, args);\n\n    this.setLatestList(event, args);\n\n    this._currentRoute = {\n      event,\n      eventArgs: args,\n    };\n\n    if (!isFunction(action)) {\n      action = this[action];\n    }\n\n    action.apply(this, args);\n\n    Backbone.history.trigger('current', event, ...args);\n\n    this.triggerMethod('appRoute', event, ...args);\n  },\n\n  setLatestList(event, eventArgs) {\n    if (this._routes[event].isList) {\n      Radio.request('history', 'set:latestList', event, eventArgs);\n      return;\n    }\n\n    if (!this._routes[event].clearLatestList) return;\n\n    Radio.request('history', 'set:latestList', false);\n  },\n\n  // handler that ensures one running app\n  startCurrent(appName, options) {\n    this.stopCurrent();\n\n    this._currentAppName = appName;\n    this._currentAppOptions = options;\n\n    options = extend({\n      currentRoute: this._currentRoute,\n    }, options);\n\n    const app = this.startChildApp(appName, options);\n\n    this._current = app;\n\n    return app;\n  },\n\n  startRoute(appName, options) {\n    if (this.isCurrent(appName, options)) {\n      return this.getCurrent().startRoute(this.getCurrentRoute());\n    }\n    return this.startCurrent(appName, options);\n  },\n\n  getCurrent() {\n    return this._current;\n  },\n\n  isCurrent(appName, options) {\n    return (appName === this._currentAppName)\n      && (isEqual(options, this._currentAppOptions));\n  },\n\n  getCurrentRoute() {\n    return this._currentRoute;\n  },\n\n  stopCurrent() {\n    if (!this._current) return;\n\n    this._current.stop();\n    this._current = null;\n    this._currentAppName = null;\n    this._currentAppOptions = null;\n  },\n\n  // takes an event and translates data into the applicable url fragment\n  translateEvent(event) {\n    const route = this.router.getDefaultRoute(event);\n\n    return this.router.translateRoute(route, rest(arguments));\n  },\n\n  // takes an event and changes the URL without triggering or adding to the history\n  replaceRoute() {\n    const url = this.translateEvent.apply(this, arguments);\n\n    Backbone.history.navigate(url, { trigger: false, replace: true });\n  },\n\n  navigateRoute() {\n    const url = this.translateEvent.apply(this, arguments);\n\n    Backbone.history.navigate(url, { trigger: false });\n  },\n});\n","import $ from 'jquery';\nimport { keys } from 'underscore';\nimport Radio from 'backbone.radio';\nimport { Behavior } from 'marionette';\n\nexport default Behavior.extend({\n  ui: {\n    iframe: 'iframe',\n  },\n  onInitialize() {\n    this.channel = Radio.channel(`form${ this.view.model.id }`);\n  },\n  replies: {\n    send(message, args = {}) {\n      const iframeWindow = this.ui.iframe[0].contentWindow;\n      iframeWindow.postMessage({ message, args }, window.origin);\n    },\n    focus() {\n      Radio.trigger('user-activity', 'iframe:focus', this.ui.iframe[0]);\n    },\n  },\n  onAttach() {\n    this.channel.reply(this.replies, this);\n\n    $(window).on('message', ({ originalEvent }) => {\n      const { data, origin } = originalEvent;\n      /* istanbul ignore next: security check */\n      if (origin !== window.origin || !data || !data.message) return;\n\n      this.channel.request(data.message, data.args);\n    });\n  },\n  onBeforeDetach() {\n    $(window).off('message');\n    this.channel.stopReplying(keys(this.replies).join(' '));\n  },\n});\n","import hbs from 'handlebars-inline-precompile';\nimport { View } from 'marionette';\n\nimport IframeFormBehavior from 'js/behaviors/iframe-form';\n\nimport { auth0Config } from 'js/config';\n\nimport 'scss/modules/buttons.scss';\nimport 'scss/outreach-core.scss';\nimport './outreach.scss';\n\nconst DialogView = View.extend({\n  template: hbs`\n    <div><h1 class=\"site-title\">{{ name }}</h1></div>\n    <div class=\"dialog\" data-content-region>\n      <div class=\"dialog__icon--success\">{{fas \"circle-check\"}}</div>\n      <div>You’ve submitted the form. Nice job.</div>\n    </div>\n  `,\n  templateContext() {\n    return {\n      name: auth0Config.name,\n    };\n  },\n  regions: {\n    content: '[data-content-region]',\n  },\n});\n\nconst iFrameFormView = View.extend({\n  behaviors: [IframeFormBehavior],\n  regions: {\n    formAction: '[data-action-region]',\n  },\n  template: hbs`\n  <div class=\"form__header\">\n    <div class=\"form__title\">{{ name }}</div>\n    <div data-action-region></div>\n  </div>\n  <div class=\"form__content\">\n    <iframe src=\"/formapp/\"></iframe>\n  </div>\n  `,\n});\n\nconst SaveView = View.extend({\n  isDisabled: false,\n  tagName: 'button',\n  className: 'button--green',\n  attributes() {\n    return {\n      disabled: this.getOption('isDisabled'),\n    };\n  },\n  template: hbs`Save`,\n  triggers: {\n    'click': 'click',\n  },\n  onClick() {\n    this.$el.prop('disabled', true);\n  },\n});\n\nconst LoginView = View.extend({\n  ui: {\n    date: '.js-date',\n    submit: '.js-submit',\n  },\n  triggers: {\n    'change @ui.date': 'change:date',\n    'blur @ui.date': 'blur:date',\n    'click @ui.submit': 'click:submit',\n  },\n  modelEvents: {\n    'change:hasError': 'render',\n  },\n  template: hbs`\n    <div class=\"dialog__icon\">{{far \"lock-keyhole\"}}</div>\n    <div>Enter your date of birth to access this form.</div>\n    <div><input type=\"date\" class=\"js-date dialog__input{{#if hasError}} has-error{{/if}}\" required pattern=\"\\d{4}-\\d{2}-\\d{2}\" placeholder=\"Your Date of Birth\" value=\"{{ dob }}\"></div>\n    {{#if hasError}}<div class=\"dialog__error\">That date of birth does not match our records. Please try again.</div>{{/if}}\n    <div><button class=\"button--green dialog__button js-submit\" {{#unless dob}}disabled{{/unless}}>Continue to Form {{fas \"right-to-bracket\"}}</button></div>\n  `,\n  onChangeDate() {\n    const dob = this.ui.date.val();\n    this.model.set({ dob });\n    this.ui.submit.prop('disabled', !dob);\n  },\n  onBlurDate() {\n    this.model.set({ hasError: false });\n  },\n});\n\nconst ResponseErrorView = View.extend({\n  template: hbs`\n    <div class=\"dialog__icon--success\">{{fas \"circle-check\"}}</div>\n    <div>This form has already been submitted.</div>\n  `,\n});\n\nconst NotAvailableView = View.extend({\n  template: hbs`\n    <div class=\"dialog__icon--warn\">{{far \"octagon-minus\"}}</div>\n    <div>This form is no longer shared. Nothing else to do here.</div>\n  `,\n});\n\nconst ErrorView = View.extend({\n  template: hbs`\n    <div class=\"dialog__icon--error\">{{far \"circle-exclamation\"}}</div>\n    <div>Uh-oh, there was an error. Try reloading the page.</div>\n  `,\n});\n\nexport {\n  DialogView,\n  iFrameFormView,\n  SaveView,\n  LoginView,\n  ResponseErrorView,\n  NotAvailableView,\n  ErrorView,\n};\n","import $ from 'jquery';\nimport 'js/base/setup';\nimport { get, map } from 'underscore';\nimport Backbone from 'backbone';\nimport Radio from 'backbone.radio';\nimport { v4 as uuid } from 'uuid';\nimport 'js/base/fontawesome';\nimport fetcher, { handleJSON } from 'js/base/fetch';\nimport { setToken } from 'js/auth';\nimport 'js/entities-service/forms';\n\nimport RouterApp from 'js/base/routerapp';\nimport App from 'js/base/app';\n\nimport {\n  DialogView,\n  iFrameFormView,\n  SaveView,\n  LoginView,\n  ResponseErrorView,\n  NotAvailableView,\n  ErrorView,\n} from './outreach_views';\n\nfunction getRelationship(id, type) {\n  return { data: { type, id } };\n}\n\nfunction getToken({ dob, actionId }) {\n  const data = {\n    type: 'patient-tokens',\n    id: uuid(),\n    attributes: {\n      reason: 'outreach',\n      birth_date: dob,\n    },\n    relationships: {\n      action: getRelationship(actionId, 'patient-actions'),\n    },\n  };\n\n  return fetcher('/api/patient-tokens', {\n    method: 'POST',\n    data: JSON.stringify({ data }),\n  })\n    .then(handleJSON)\n    .then(({ data: { attributes } }) => {\n      setToken(attributes.token);\n      return Promise.resolve(attributes.token);\n    });\n}\n\nfunction postResponse({ formId, actionId, response }) {\n  const data = {\n    type: 'form-responses',\n    id: uuid(),\n    attributes: { response },\n    relationships: {\n      action: getRelationship(actionId, 'patient-actions'),\n      form: getRelationship(formId, 'forms'),\n    },\n  };\n\n  return fetcher(`/api/actions/${ actionId }/relationships/form-responses`, {\n    method: 'POST',\n    data: JSON.stringify({ data }),\n  })\n    .then(handleJSON);\n}\n\nconst LoginApp = App.extend({\n  onStart({ actionId }) {\n    const dialogView = new DialogView();\n\n    this.showLogin(actionId, dialogView.getRegion('content'));\n\n    this.showView(dialogView);\n  },\n  showLogin(actionId, region) {\n    const loginView = new LoginView({ model: this.getState() });\n\n    this.listenTo(loginView, 'click:submit', () => {\n      getToken({ actionId, dob: this.getState('dob') })\n        .then(() => {\n          this.stop({ isAuthed: true });\n        })\n        .catch(response => {\n          switch (response.status) {\n            case 400:\n              this.setState({ hasError: true });\n              break;\n            case 409:\n              region.show(new ResponseErrorView());\n              break;\n            case 404:\n            case 403:\n            case 401:\n              region.show(new NotAvailableView());\n              break;\n            default:\n              region.show(new ErrorView());\n              break;\n          }\n        });\n    });\n\n    region.show(loginView);\n  },\n});\n\nconst FormApp = App.extend({\n  beforeStart({ actionId }) {\n    return [\n      Radio.request('entities', 'fetch:forms:byAction', actionId),\n      Radio.request('entities', 'fetch:forms:definition:byAction', actionId),\n      Radio.request('entities', 'fetch:forms:fields', actionId),\n    ];\n  },\n  /* istanbul ignore next: Don't handle non-API errors */\n  onFail() {\n    const dialogView = new DialogView();\n    dialogView.showChildView('content', new ErrorView());\n    this.showView(dialogView);\n  },\n  onStart({ actionId }, form, definition, fields) {\n    this.actionId = actionId;\n    this.form = form;\n    this.definition = definition;\n    this.fields = fields;\n    this.setView(new iFrameFormView({ model: this.form }));\n    this.startService();\n    this.showFormSaveDisabled();\n    this.showView();\n  },\n  startService() {\n    this.channel = Radio.channel(`form${ this.form.id }`);\n\n    this.channel.reply({\n      'ready:form': this.showFormSave,\n      'submit:form': this.submitForm,\n      'fetch:form:data': this.getFormPrefill,\n    }, this);\n  },\n  getFormPrefill() {\n    this.channel.request('send', 'fetch:form:data', {\n      definition: this.definition,\n      formData: get(this.fields, 'data.attributes'.split('.'), {}),\n      formSubmission: {},\n      ...this.form.getContext(),\n    });\n  },\n  showFormSaveDisabled() {\n    if (this.form.isReadOnly()) return;\n    this.showChildView('formAction', new SaveView({ isDisabled: true }));\n  },\n  showFormSave() {\n    if (this.form.isReadOnly()) return;\n    const saveView = this.showChildView('formAction', new SaveView());\n\n    this.listenTo(saveView, 'click', () => {\n      this.channel.request('send', 'form:submit');\n    });\n  },\n  submitForm({ response }) {\n    postResponse({\n      formId: this.form.id,\n      actionId: this.actionId,\n      response,\n    })\n      .then(/* istanbul ignore next: Skipping flaky portion of Outreach > Form test */\n        () => {\n          this.showView(new DialogView());\n        })\n      .catch(async res => {\n        const responseData = await res.json();\n        this.showFormSave();\n        /* istanbul ignore next: Don't handle non-API errors */\n        if (!responseData) return;\n        const errors = map(responseData.errors, 'detail');\n        this.channel.request('send', 'form:errors', errors);\n      });\n  },\n});\n\nconst OutreachApp = RouterApp.extend({\n  childApps: {\n    login: LoginApp,\n    form: FormApp,\n  },\n  routerAppName: 'PatientsApp',\n  eventRoutes: {\n    'outreach': {\n      action: 'show',\n      route: 'outreach/:id',\n    },\n  },\n  show(actionId) {\n    this.actionId = actionId;\n\n    this.startLogin();\n  },\n  startLogin() {\n    const loginApp = this.startCurrent('login', { actionId: this.actionId });\n\n    this.listenTo(loginApp, 'stop', () => {\n      // NOTE: Future non-authed stop if (!isAuthed) return;\n      this.startForm();\n    });\n  },\n  startForm() {\n    this.startCurrent('form', { actionId: this.actionId });\n  },\n});\n\nfunction startOutreachApp() {\n  // Modify viewport for mobile devices at full width\n  $('meta[name=viewport]').attr('content', 'width=device-width, initial-scale=1.0, maximum-scale=1.0');\n  new OutreachApp({ region: { el: document.getElementById('root') } });\n  Backbone.history.start({ pushState: true });\n}\n\nexport {\n  startOutreachApp,\n};\n","/**\n * backbone.eventrouter - A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel\n * @version v1.0.1\n * @link https://github.com/RoundingWellOS/backbone.eventrouter\n * @license MIT\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.radio')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.radio'], factory) :\n  (global.Backbone = global.Backbone || {}, global.Backbone.EventRouter = factory(global._,global.Backbone,global.Radio));\n}(this, function (_,Backbone,backbone_radio) { 'use strict';\n\n  _ = 'default' in _ ? _['default'] : _;\n  Backbone = 'default' in Backbone ? Backbone['default'] : Backbone;\n\n  // eslint-disable-line\n\n  // https://github.com/jashkenas/backbone/blob/1.2.1/backbone.js#L1425\n  var namedParamRegex = /(\\(\\?)?:\\w+/;\n\n  /**\n   * Backbone.Router coupled with a Backbone.Radio Channel.\n   *\n   * @public\n   * @class EventRouter\n   * @memberOf Backbone\n   */\n  var EventRouter = Backbone.EventRouter = Backbone.Router.extend({\n\n    /**\n     * @public\n     * @constructs EventRouter\n     * @param {Object} [options] - Settings for the EventRouter\n     * @param {Boolean} [options.channelName]\n     * @param {Boolean} [options.routeTriggers]\n     */\n    constructor: function constructor(options) {\n      _.extend(this, _.pick(options, ['channelName', 'routeTriggers']));\n\n      this._ch = Backbone.Radio.channel(_.result(this, 'channelName'));\n\n      this.listenTo(this._ch, 'all', this.navigateFromEvent);\n\n      // Backbone.Router routes are added first\n      // Routes can be added after the triggerRoutes with the Backbone.Router API\n      Backbone.Router.apply(this, arguments);\n\n      this._initRoutes();\n    },\n\n\n    /**\n     * The Radio Channel name.\n     *\n     * @type {String}\n     * @default 'event-router'\n     */\n    channelName: 'event-router',\n\n    /**\n     * Get the router's Radio channel instance\n     *\n     * @public\n     * @method getChannel\n     * @memberOf EventRouter\n     * @returns {Backbone.Radio.Channel}\n     */\n    getChannel: function getChannel() {\n      return this._ch;\n    },\n\n\n    /**\n     * For each routeTrigger it adds a route to Backbone.Router\n     *\n     * @private\n     * @method _initRoutes\n     * @memberOf EventRouter\n     */\n    _initRoutes: function _initRoutes() {\n      this._routeTriggers = _.result(this, 'routeTriggers', {});\n\n      _.each(this._routeTriggers, this._addRouteTrigger, this);\n    },\n\n\n    /**\n     * Adds a route(s) to Backbone.Router which on route triggers\n     * the appropriate event\n     *\n     * @private\n     * @method _addRouteTrigger\n     * @param {Array|String} routes - Route string or array of route strings\n     * @param {String} event - Event string to trigger on route\n     * @memberOf EventRouter\n     */\n    _addRouteTrigger: function _addRouteTrigger(routes, event) {\n      // handle any route as an array by default for the _.each\n      routes = _.isArray(routes) ? routes : [routes];\n\n      _.each(routes, function (route) {\n        this.route(route, event, _.bind(this._ch.trigger, this._ch, event));\n      }, this);\n    },\n\n\n    /**\n     * Adds a routeTrigger, and route(s) to Backbone.Router\n     * which on route triggers the appropriate event.\n     *\n     * @public\n     * @method addRouteTrigger\n     * @param {Array|String} routes - Route string or array of route strings\n     * @param {String} event - Event string to trigger on route\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    addRouteTrigger: function addRouteTrigger(routes, event) {\n      this._routeTriggers[event] = routes;\n      this._addRouteTrigger(routes, event);\n\n      return this;\n    },\n\n\n    /**\n     * Overrides `Backbone.Router.route()\n     * Like Backbone.Router.Route but with before events\n     * It also temporarily stores the event for understanding\n     * what route is currently being handled.\n     *\n     * @public\n     * @method route\n     * @param {String} route - Route string\n     * @param {String} [name] - Name of route\n     * @param {String} callback - Function called on route\n     * @event EventRouter#before:route - passes route name and route arguments\n     * @event EventRouter#before:route:{event_name} - passes route arguments\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    route: function route(_route, name, callback) {\n      var bbRoute = Backbone.Router.prototype.route;\n\n      if (_.isFunction(name) || !callback) {\n        return bbRoute.call(this, _route, name, callback);\n      }\n\n      var wrappedCallback = _.bind(function () {\n        var args = _.drop(arguments, 0);\n\n        // Trigger before: events that match currently triggered events\n        this.trigger('before:route', name, args);\n        this.trigger.apply(this, ['before:route:' + name].concat(args));\n\n        this._storeRouteTrigger([name].concat(args));\n        callback.apply(this, args);\n        this._clearRouteTrigger();\n      }, this);\n\n      return bbRoute.call(this, _route, name, wrappedCallback);\n    },\n\n\n    /**\n     * Stores the route name and route arguments on a stack\n     *\n     * @private\n     * @method _storeRouteTrigger\n     * @param {Array} args - Array of route name and route arguments\n     * @memberOf EventRouter\n     */\n    _storeRouteTrigger: function _storeRouteTrigger(args) {\n      this._routeArgs = this._routeArgs || [];\n      this._routeArgs.push(args);\n    },\n\n\n    /**\n     * Gets the top of the triggered route store stack\n     *\n     * @private\n     * @method _getCurrentRouteTrigger\n     * @memberOf EventRouter\n     * @returns {Array}\n     */\n    _getCurrentRouteTrigger: function _getCurrentRouteTrigger() {\n      return _.last(this._routeArgs) || [];\n    },\n\n\n    /**\n     * Pops the latests route triggered off of the store stack\n     *\n     * @private\n     * @method _clearRouteTrigger\n     * @memberOf EventRouter\n     */\n    _clearRouteTrigger: function _clearRouteTrigger() {\n      this._routeArgs.pop();\n    },\n\n\n    /**\n     * Checks to see if the current event being tests is the latest\n     * route being handled by comparing the route name and arguments\n     *\n     * @private\n     * @method _isTriggeredFromRoute\n     * @memberOf EventRouter\n     * @returns {Boolean}\n     */\n    _isTriggeredFromRoute: function _isTriggeredFromRoute() {\n      var currentRoute = this._getCurrentRouteTrigger();\n\n      if (arguments.length !== currentRoute.length) {\n        return false;\n      }\n\n      return arguments.length === _.union(arguments, this.currentRoute).length;\n    },\n\n\n    /**\n     * Takes a event string and any arguments passed to that event\n     * And if not initiated by a route, translates the event into a\n     * URL and navigates to it without re-triggering the route\n     *\n     * @public\n     * @method navigateFromEvent\n     * @param {String} event - Event string\n     * @event EventRouter#noMatch - passes route arguments\n     * @memberOf EventRouter\n     * @returns {EventRouter}\n     */\n    navigateFromEvent: function navigateFromEvent(event) {\n      var route = this.getDefaultRoute(event);\n\n      // if no matching route exists do nothing\n      if (!route) {\n        var args = _.drop(arguments, 0);\n        this.trigger.apply(this, ['noMatch'].concat(args));\n        return this;\n      }\n\n      if (this._isTriggeredFromRoute.apply(this, arguments)) {\n        return this;\n      }\n\n      var eventArgs = _.drop(arguments, 1);\n\n      var translatedRoute = this.translateRoute(route, eventArgs);\n\n      // update URL without triggering the route\n      return this.navigate(translatedRoute, { trigger: false });\n    },\n\n\n    /**\n     * Get the default route string\n     * Either the first of the array or the passed in event if singular\n     *\n     * @public\n     * @method getDefaultRoute\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    getDefaultRoute: function getDefaultRoute(event) {\n      var routes = this._routeTriggers[event];\n\n      return _.isArray(routes) ? routes[0] : routes;\n    },\n\n\n    /**\n     * Finds the next name params (ie: :param) and replaces it with the arg\n     *\n     * @private\n     * @method _replaceParam\n     * @param {String} route - Route string\n     * @param {String|Number} arg - value to replace named param\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    _replaceParam: function _replaceParam(route, arg) {\n      return route.replace(namedParamRegex, arg);\n    },\n\n\n    /**\n     * Takes a route string and an array or arguments\n     * and returns a url with the named params replaced with the argument values\n     *\n     * @public\n     * @method translateRoute\n     * @param {String} route - Route string\n     * @param {Array} eventArgs - Passed event arguments\n     * @memberOf EventRouter\n     * @returns {String}\n     */\n    translateRoute: function translateRoute(route, eventArgs) {\n      return _.reduce(eventArgs, this._replaceParam, route);\n    }\n  });\n\n  return EventRouter;\n\n}));\n\n"],"names":["App","routerAppName","constructor","this","initRouter","listenTo","router","onNoMatch","on","stopCurrent","arguments","_routes","result","routeTriggers","getRouteTriggers","EventRouter","bindRouteEvents","stop","_currentRoute","reduce","eventName","route","getEventActions","eventRoutes","routeAction","eventActions","action","partial","getChannel","event","isRunning","start","args","triggerMethod","Radio","setLatestList","eventArgs","isFunction","apply","Backbone","isList","clearLatestList","startCurrent","appName","options","_currentAppName","_currentAppOptions","extend","currentRoute","app","startChildApp","_current","startRoute","isCurrent","getCurrent","getCurrentRoute","isEqual","translateEvent","getDefaultRoute","translateRoute","rest","replaceRoute","url","trigger","replace","navigateRoute","Behavior","ui","iframe","onInitialize","channel","view","model","id","replies","send","message","contentWindow","postMessage","window","origin","focus","onAttach","reply","$","originalEvent","data","request","onBeforeDetach","off","stopReplying","keys","join","DialogView","View","template","templateContext","name","auth0Config","regions","content","iFrameFormView","behaviors","IframeFormBehavior","formAction","SaveView","isDisabled","tagName","className","attributes","disabled","getOption","triggers","onClick","$el","prop","LoginView","date","submit","modelEvents","onChangeDate","dob","val","set","onBlurDate","hasError","ResponseErrorView","NotAvailableView","ErrorView","getRelationship","type","LoginApp","onStart","actionId","dialogView","showLogin","getRegion","showView","region","loginView","getState","uuid","reason","birth_date","relationships","fetcher","method","JSON","stringify","then","handleJSON","setToken","token","Promise","resolve","getToken","isAuthed","catch","response","status","setState","show","FormApp","beforeStart","onFail","showChildView","form","definition","fields","setView","startService","showFormSaveDisabled","showFormSave","submitForm","getFormPrefill","formData","get","split","formSubmission","getContext","isReadOnly","saveView","formId","postResponse","async","responseData","res","json","errors","map","OutreachApp","RouterApp","childApps","login","startLogin","loginApp","startForm","startOutreachApp","attr","el","document","getElementById","pushState","module","exports","_","backbone_radio","namedParamRegex","Router","pick","_ch","navigateFromEvent","_initRoutes","channelName","_routeTriggers","each","_addRouteTrigger","routes","isArray","bind","addRouteTrigger","_route","callback","bbRoute","prototype","call","wrappedCallback","drop","concat","_storeRouteTrigger","_clearRouteTrigger","_routeArgs","push","_getCurrentRouteTrigger","last","pop","_isTriggeredFromRoute","length","union","translatedRoute","navigate","_replaceParam","arg","factory"],"sourceRoot":""}